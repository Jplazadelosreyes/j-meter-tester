# Nombre del flujo de trabajo
name: CI Test for JMeter Docker Setup

# Disparadores del flujo
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Trabajos que se ejecutarán
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create required directories for Docker volumes
        run: mkdir -p jmeter-tests jmeter-results

      - name: Create a dummy JTL result file for testing
        run: |
          echo "timeStamp,elapsed,label,responseCode,responseMessage,threadName,dataType,success,failureMessage,bytes,sentBytes,grpThreads,allThreads,URL,Latency,IdleTime,Connect" > ./jmeter-results/Reporte.jtl
          echo "1672531200000,123,Test Request,200,OK,Thread Group 1-1,text,true,,456,123,1,1,http://example.com,120,0,50" >> ./jmeter-results/Reporte.jtl

      - name: Build the Docker image with Docker Compose
        run: docker compose build

      - name: Run containers in the background
        run: docker compose up -d

      - name: Wait for the container to be ready
        run: |
          echo "Waiting 30 seconds for container to initialize..."
          sleep 30
          echo "Container should be ready. Listing running containers:"
          docker ps -a

      - name: Execute report generation script inside the container
        run: docker exec jmeter_gui bash /home/jmeter/jmeter-tests/generar_informe.sh

      - name: Verify that the HTML report was generated
        run: test -f ./jmeter-results/reporte_html/index.html && echo "✅ Report generated successfully!"

      - name: Clean up containers
        if: always()
        run: |
          echo "Cleaning up Docker containers..."
          docker compose down
